package vista;

import afn.AFN;
import afn.Estado;
import afn.ListaEstados;
import afn.Transicion;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 * Clase encargada de obtener la imagen del grafo y ponerla en pantalla
 *
 * @author Marco Alvarez
 * @author Sebastian Lena
 */
public class DibujarAutomata extends javax.swing.JFrame {

    private AFN automata;

    /** Creates new form DibujarAutomata
     * @param a Automata a Graficar
     */
    public DibujarAutomata(AFN a) {
        this.automata = a;
        initComponents();
        this.dibujarAutomata();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        imagen = new javax.swing.JLabel();

        setResizable(false);

        jScrollPane1.setBorder(null);
        jScrollPane1.setViewportView(imagen);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setTitulo(String titulo){
        this.setTitle(titulo);
    }

    /*
     * Metodo que coloca la imagen en el jLabel imagen
     */
    private void dibujarAutomata() {
        this.imagen.setIcon(null);
        ImageIcon i = null;
        i = this.obtenerImagen();

        if (i != null) {
            this.imagen.setIcon(i);
        } else {
            JOptionPane.showMessageDialog(this,
                "Ha ocurrido un error inesperado!",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.imagen.setHorizontalAlignment(JLabel.CENTER);
        this.imagen.repaint();
    }

    /*
     * Metodo que obtiene la imagen del GraphViz
     */
    private ImageIcon obtenerImagen() {
        GraphViz graphviz = new GraphViz();
        ImageIcon icon;
        byte [] imagenBytes;
        imagenBytes = graphviz.dibujar(this.generarDot());
        icon = new ImageIcon(imagenBytes);
        return icon;
    }

    /**
     * Genera la sintaxis para la construccion del automata mediante el Graphviz
     * @return Sintaxis Dot
     */
    public String generarDot(){
        String cabecera = "digraph finite_state_machine {\n\trankdir=LR;\n\toverlap=scale;\n";
        String nodos = "\tnode [shape = circle];\n";
        String arcos = "";
        String estilos = "";

        ListaEstados estados = this.automata.getEstados();

        for (Estado e : estados) {
            if(e.isEstadofinal())
                estilos = "[ shape = doublecircle ]";
            else if (e.isEstadoinicial())
                estilos = "[ label = inicio]";
            else
                estilos = "[ shape = circle ]";
            
            nodos+="\t"+e.getId() + " "+estilos+"\n";

            for (Transicion enlace : e.getEnlaces()) {

                Estado orig = enlace.getOrigen();
                Estado dest = enlace.getDestino();
                String label = enlace.getEtiqueta();

                String EnlaceStyle = "[ label = \"" + label + "\" ]";

                arcos += "\t"+orig.getId() + " -> " + dest.getId() +
                                " "+EnlaceStyle+"\n";
            }
        }
        String result = cabecera + nodos + arcos + "}";
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imagen;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
